#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ–¥–æ–º
const SOURCE_FILE = 'nextjs_tailwind_smarttoy.ts';

console.log('üöÄ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ SmartToy AI...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if (!fs.existsSync(SOURCE_FILE)) {
  console.error(`‚ùå –§–∞–π–ª ${SOURCE_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
  console.log('–£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞');
  process.exit(1);
}

// –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
const content = fs.readFileSync(SOURCE_FILE, 'utf8');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
function ensureDir(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: ${dirPath}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
function writeFile(filePath, content, description) {
  ensureDir(path.dirname(filePath));
  
  // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
  if (fs.existsSync(filePath)) {
    const backupPath = `${filePath}.backup`;
    fs.copyFileSync(filePath, backupPath);
    console.log(`üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: ${backupPath}`);
  }
  
  fs.writeFileSync(filePath, content);
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${filePath} - ${description}`);
}

// –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
const filePatterns = [
  {
    pattern: /\/\/ src\/app\/layout\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/page\.tsx)/,
    path: 'src/app/layout.tsx',
    description: 'Root Layout'
  },
  {
    pattern: /\/\/ src\/app\/page\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/components\/Header\.tsx)/,
    path: 'src/app/page.tsx',
    description: 'Main Page'
  },
  {
    pattern: /\/\/ src\/app\/components\/Header\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/components\/Hero\.tsx)/,
    path: 'src/app/components/Header.tsx',
    description: 'Header Component'
  },
  {
    pattern: /\/\/ src\/app\/components\/Hero\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/components\/Features\.tsx)/,
    path: 'src/app/components/Hero.tsx',
    description: 'Hero Component'
  },
  {
    pattern: /\/\/ src\/app\/components\/Features\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/components\/Product\.tsx)/,
    path: 'src/app/components/Features.tsx',
    description: 'Features Component'
  },
  {
    pattern: /\/\/ src\/app\/components\/Product\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/components\/CTA\.tsx)/,
    path: 'src/app/components/Product.tsx',
    description: 'Product Component'
  },
  {
    pattern: /\/\/ src\/app\/components\/CTA\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/components\/Footer\.tsx)/,
    path: 'src/app/components/CTA.tsx',
    description: 'CTA Component'
  },
  {
    pattern: /\/\/ src\/app\/components\/Footer\.tsx\n([\s\S]*?)(?=\n\/\/ src\/app\/globals\.css)/,
    path: 'src/app/components/Footer.tsx',
    description: 'Footer Component'
  },
  {
    pattern: /\/\/ src\/app\/globals\.css\n([\s\S]*?)(?=\n\/\/ tailwind\.config\.ts)/,
    path: 'src/app/globals.css',
    description: 'Global CSS'
  },
  {
    pattern: /\/\/ tailwind\.config\.ts\n([\s\S]*?)(?=\n\/\/ next\.config\.js)/,
    path: 'tailwind.config.ts',
    description: 'Tailwind Config'
  },
  {
    pattern: /\/\/ next\.config\.js\n([\s\S]*?)(?=\n\/\/ package\.json)/,
    path: 'next.config.js',
    description: 'Next.js Config'
  },
  {
    pattern: /\/\/ package\.json \(–æ–±–Ω–æ–≤–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π\)\n([\s\S]*?)(?=\n\/\/ README\.md)/,
    path: 'package.json.new',
    description: 'Updated Package.json'
  },
  {
    pattern: /\/\/ README\.md\n([\s\S]*?)$/,
    path: 'README.md.new',
    description: 'Project README'
  }
];

// –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
ensureDir('src/app/components');

console.log('\nüìÇ –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–π–ª—ã...\n');

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
filePatterns.forEach(({ pattern, path: filePath, description }) => {
  const match = content.match(pattern);
  if (match) {
    let fileContent = match[1].trim();
    
    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
    fileContent = fileContent.replace(/^[ ]{0,4}/gm, '');
    
    writeFile(filePath, fileContent, description);
  } else {
    console.log(`‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è: ${filePath}`);
  }
});

console.log('\nüéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. npm install                    # —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
console.log('2. npm run dev                    # –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
console.log('3. –û—Ç–∫—Ä–æ–π http://localhost:3000   # –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç');

console.log('\nüìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã:');
console.log('‚Ä¢ package.json.new - –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è package.json');
console.log('‚Ä¢ *.backup - —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∑–∞–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤');

console.log('\nüöÄ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!');
